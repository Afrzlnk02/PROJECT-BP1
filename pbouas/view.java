/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PBOUAS;
import com.sun.glass.ui.View;
import java.awt.Dialog;
import java.sql.Connection; 
import java.sql.DriverManager; 
import java.sql.PreparedStatement; 
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AfrizalNurkholik
 */
public class view extends javax.swing.JFrame {

    /**
     * Creates new form view
     */
    public view() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Clear = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        searchData = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        print = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Fnama = new javax.swing.JTextField();
        Fasal = new javax.swing.JTextField();
        Ftujuan = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        jLabel5.setText("Search By ID");

        searchData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDataActionPerformed(evt);
            }
        });

        search.setText("Find");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 402));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "Nama Penumpang", "Asal Penumpang", "Tujuan Penumpang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("DATA DIRI PENUMPANG BUS");

        jLabel1.setText("NAMA PENUMPANG");

        jLabel2.setText("KOTA ASAL");

        jLabel3.setText("KOTA TUJUAN");

        submit.setText("Create");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(search)
                            .addComponent(searchData, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back)
                        .addGap(67, 67, 67)
                        .addComponent(print)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5)
                        .addComponent(Fnama, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                        .addComponent(Fasal)
                        .addComponent(Ftujuan))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(submit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Clear)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Fnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(Fasal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(Ftujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submit)
                            .addComponent(Clear)
                            .addComponent(Update)
                            .addComponent(delete))
                        .addGap(55, 55, 55)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search)
                    .addComponent(back)
                    .addComponent(print))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        GenerateReport generatereport = new GenerateReport(); 
        generatereport.generateReport();
    }//GEN-LAST:event_printActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        String NAMA, ASAL, TUJUAN, query;
  
    try {
        Class.forName("com.mysql.jdbc.Driver");
        
        String url = "jdbc:mysql://localhost:3306/java_user";
          String user = "root";  
          String password = "";  
        
        Connection con = DriverManager.getConnection(url, user, password);
        Statement st = con.createStatement();
        
        if ("".equals(Fnama.getText())) { 
            JOptionPane.showMessageDialog(new JFrame(), "Nama Calon Penumpang Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else if ("".equals(Fasal.getText())) { 
            JOptionPane.showMessageDialog(new JFrame(), "Asal Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else if("".equals(Ftujuan.getText())) { 
            JOptionPane.showMessageDialog(new JFrame(), "Tujuan Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else {
            NAMA = Fnama.getText();
            ASAL = Fasal.getText(); // Menggunakan format waktu
            TUJUAN = Ftujuan.getText();
            
            query = "INSERT INTO db_bs (Nama, Asal, Tujuan) VALUES ('" + NAMA + "','" + ASAL + "','" + TUJUAN + "')";
            System.out.println("Nama: " + NAMA + ", Asal: " + ASAL + ", Tujuan: " + TUJUAN);
            
            st.executeUpdate(query);
            Fnama.setText("");
            Fasal.setText("");
            Ftujuan.setText("");
            
            JOptionPane.showMessageDialog(null, "Register Successfully processed.");
            loadData(); // Memanggil metode loadData() untuk memperbarui tabel
            con.close();
        }
    } catch(Exception e) {
        
        System.out.println("Error: " + e.getMessage());}

    }//GEN-LAST:event_submitActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        String id, NAMA, ASAL, TUJUAN;
    Connection con = null;
    try {
        Class.forName("com.mysql.jdbc.Driver");
        
        String url = "jdbc:mysql://localhost:3306/java_user";
          String user = "root";  
          String password = "";  
        
        con = DriverManager.getConnection(url, user, password);
        id = searchData.getText();
        NAMA = Fnama.getText();
        ASAL = Fasal.getText();
        TUJUAN = Ftujuan.getText();
        
        if ("".equals(id)) { 
            JOptionPane.showMessageDialog(new JFrame(), "ID diperlukan", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else if ("".equals(Fnama)) { 
            JOptionPane.showMessageDialog(new JFrame(), "Nama Penumpang diperlukan", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else if ("".equals(Fasal)) { 
            JOptionPane.showMessageDialog(new JFrame(), "Kota Asal diperlukan", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else if ("".equals(Ftujuan)) { 
            JOptionPane.showMessageDialog(new JFrame(), "Kota Tujuan diperlukan", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else {
            String sql = "UPDATE `db_bs` SET `Nama` = ?, `Asal` = ?, `Tujuan` = ? WHERE `id` = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, NAMA);
            pst.setString(2, ASAL);
            pst.setString(3, TUJUAN);
            pst.setString(4, id);
            int rowsUpdated = pst.executeUpdate();
            
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(new JFrame(), "Data berhasil diperbarui", "Dialog", JOptionPane.INFORMATION_MESSAGE);
                loadData(); // Memanggil metode loadData() untuk memperbarui tabel
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Data tidak ditemukan", "Dialog", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    } catch(Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (con != null) {
            try {
                con.close();
            } catch (SQLException e) {
                System.out.println("Error closing connection: " + e.getMessage());
            }
        }
    }
    }//GEN-LAST:event_UpdateActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        String id;
    try {
        Class.forName("com.mysql.jdbc.Driver");
        
        String url = "jdbc:mysql://localhost:3306/java_user";
          String user = "root";  
          String password = "";  
        
        Connection con = DriverManager.getConnection(url, user, password);
        String sql = "SELECT `Nama`, `Asal`, `Tujuan` FROM `db_bs` WHERE `id` = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        id = searchData.getText();
        if ("".equals(id)) { 
            JOptionPane.showMessageDialog(new JFrame(), "ID diperlukan", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else {
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                Fnama.setText(rs.getString("Nama"));
                Fasal.setText(rs.getString("Asal"));
                Ftujuan.setText(rs.getString("Tujuan"));
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Data tidak ditemukan", "Dialog", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    } catch(Exception e) {
        System.out.println("Error: " + e.getMessage());
    }
                 
    }//GEN-LAST:event_searchActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String id;
    int notFound = 0;
    Connection con = null;
    try {
        Class.forName("com.mysql.jdbc.Driver");
          
          String url = "jdbc:mysql://localhost:3306/java_user";
          String user = "root";  
          String password = "";   
        
        con = DriverManager.getConnection(url, user, password);
        String sql = "SELECT `Nama`, `Asal`, `Tujuan` FROM `db_bs` WHERE `id` = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        id = searchData.getText();
        if ("".equals(id)) { 
            JOptionPane.showMessageDialog(new JFrame(), "ID diperlukan", "Dialog", JOptionPane.ERROR_MESSAGE);
        } else {
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                notFound = 1;
            } 
            if (notFound == 0) {
                JOptionPane.showMessageDialog(new JFrame(), "Data tidak ditemukan", "Dialog", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Jika data ditemukan, hapus data tersebut
                String deleteSql = "DELETE FROM `db_bs` WHERE `id` = ?";
                PreparedStatement deletePst = con.prepareStatement(deleteSql);
                deletePst.setString(1, id);
                deletePst.executeUpdate();
                JOptionPane.showMessageDialog(new JFrame(), "Data berhasil dihapus", "Dialog", JOptionPane.INFORMATION_MESSAGE);
                
                // Memanggil metode loadData() untuk memperbarui tabel
                loadData();
            }
        }
    } catch(Exception e) {
        System.out.println("Error: " + e.getMessage());
    } finally {
        if (con != null) {
            try {
                con.close();
            } catch (SQLException e) {
                System.out.println("Error closing connection: " + e.getMessage());
            }
        }
    }
    }//GEN-LAST:event_deleteActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        Fnama.setText("");
        Fasal.setText("");
        Ftujuan.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        new navigasi().setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void searchDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchDataActionPerformed

     public void loadData() throws SQLException{
         try {
         Class.forName("com.mysql.jdbc.Driver");
          
          String url = "jdbc:mysql://localhost:3306/java_user";
          String user = "root";  
          String password = "";  
          
          
          Connection con = DriverManager.getConnection(url, user, password);
          Statement st = con.createStatement();
     DefaultTableModel model = new DefaultTableModel(new String[]{"id", "Nama Penumpang","Asal Penumpang","Tujuan Penumpang"}, 0);
             
      Table.setModel(model);
      // SQL query to fetch data from the database
      String sql = "SELECT `id`, `Nama`, `Asal`, `Tujuan` FROM `java_user`.`db_bs`";

      ResultSet rs = st.executeQuery(sql);
      String i, n, a, t;
      while(rs.next()) {
      i = rs.getString("id");
      n = rs.getString("Nama");
      a = rs.getString("Asal");
      t = rs.getString("Tujuan");
      model.addRow(new Object[]{i, n, a, t});
      }
      con.close();
       }
      catch(Exception e){
      System.out.println("Error" + e.getMessage());
      }
     }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               view x = new view();
                try {
                    x.loadData();
                } catch (SQLException ex) {
                    Logger.getLogger(view.class.getName()).log(Level.SEVERE, null, ex);
                }
               x.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JTextField Fasal;
    private javax.swing.JTextField Fnama;
    private javax.swing.JTextField Ftujuan;
    private javax.swing.JTable Table;
    private javax.swing.JButton Update;
    private javax.swing.JButton back;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton print;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchData;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
